/* automatically generated by rust-bindgen 0.66.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CCaDiCaL {
    _unused: [u8; 0],
}
extern "C" {
    pub fn ccadical_signature() -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ccadical_init() -> *mut CCaDiCaL;
}
extern "C" {
    pub fn ccadical_release(arg1: *mut CCaDiCaL);
}
extern "C" {
    pub fn ccadical_add(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ccadical_assume(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ccadical_solve(arg1: *mut CCaDiCaL) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ccadical_val(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ccadical_failed(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ccadical_set_terminate(
        arg1: *mut CCaDiCaL,
        state: *mut ::std::os::raw::c_void,
        terminate: ::std::option::Option<unsafe extern "C" fn(state: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int>,
    );
}
extern "C" {
    pub fn ccadical_set_learn(
        arg1: *mut CCaDiCaL,
        state: *mut ::std::os::raw::c_void,
        max_length: ::std::os::raw::c_int,
        learn: ::std::option::Option<unsafe extern "C" fn(state: *mut ::std::os::raw::c_void, clause: *mut ::std::os::raw::c_int)>,
    );
}
extern "C" {
    pub fn ccadical_constrain(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ccadical_constraint_failed(arg1: *mut CCaDiCaL) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ccadical_set_option(arg1: *mut CCaDiCaL, name: *const ::std::os::raw::c_char, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ccadical_limit(arg1: *mut CCaDiCaL, name: *const ::std::os::raw::c_char, limit: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ccadical_get_option(arg1: *mut CCaDiCaL, name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ccadical_print_statistics(arg1: *mut CCaDiCaL);
}
extern "C" {
    pub fn ccadical_active(arg1: *mut CCaDiCaL) -> i64;
}
extern "C" {
    pub fn ccadical_irredundant(arg1: *mut CCaDiCaL) -> i64;
}
extern "C" {
    pub fn ccadical_conflicts(arg1: *mut CCaDiCaL) -> i64;
}
extern "C" {
    pub fn ccadical_decisions(arg1: *mut CCaDiCaL) -> i64;
}
extern "C" {
    pub fn ccadical_restarts(arg1: *mut CCaDiCaL) -> i64;
}
extern "C" {
    pub fn ccadical_propagations(arg1: *mut CCaDiCaL) -> i64;
}
extern "C" {
    pub fn ccadical_fixed(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ccadical_terminate(arg1: *mut CCaDiCaL);
}
extern "C" {
    pub fn ccadical_freeze(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ccadical_frozen(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ccadical_melt(arg1: *mut CCaDiCaL, lit: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ccadical_simplify(arg1: *mut CCaDiCaL) -> ::std::os::raw::c_int;
}
