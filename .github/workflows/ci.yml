on: [ push, pull_request ]
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

name: CI

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  tests:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Set up cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --release

      - name: Build Cadical shared library
        run: |
          git clone --depth=1 --branch=rel-1.5.2 https://github.com/arminbiere/cadical cadical-git
          cd cadical-git
          curl -OL https://raw.githubusercontent.com/Lipen/kotlin-satlib/27bf8cbc4354a03c17987d3cf308047801d7e334/jni/patches/cadical-shared.patch
          git apply --verbose cadical-shared.patch
          ./configure -fPIC
          make -C build -j8 libcadical.so
          sudo install -m 644 build/libcadical.so -Dt /usr/local/lib
          sudo ldconfig -n /usr/local/lib
          echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}/usr/local/lib" >> $GITHUB_ENV

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --release

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Set up cache
        uses: Swatinem/rust-cache@v1

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --workspace -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy

      - name: Set up cache
        uses: Swatinem/rust-cache@v1

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --tests
